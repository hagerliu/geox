name: Build rules dat files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *" # 6:30 AM UTC+8
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "GOAMD64=v3" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: hagerliu/geox

      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v4
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout MetaCubeX/meta-rules-converter
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-converter
          path: convert

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: ./custom/go.sum

      - name: Build geosite-lite.dat file
        env:
          NO_SKIP: true
          SED: grep DOMAIN | grep -v "#" | sed 's/  - DOMAIN,/full:/g' | sed 's/  - DOMAIN-SUFFIX,//g' | sed 's/  - DOMAIN-KEYWORD,/keyword:/g'
        run: |
          cd community || exit 1
          mkdir -p data-lite
          curl -sSL https://github.com/v2fly/domain-list-community/raw/master/data/private > ./data-lite/private

          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.yaml | ${{ env.SED }} > ./data-lite/steamcn
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.yaml | ${{ env.SED }} > ./data-lite/gamecn
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownload/GameDownload.yaml | ${{ env.SED }} > ./data-lite/gamedown

          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Apple/Apple_Domain.yaml | grep - | sed "s/  - '+.//g" | sed "s/  - '/full:/g" | grep -v "#" | grep -v "acg.rip" | sed "s/'//g" > ./data-lite/apple
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/AdGuardSDNSFilter/AdGuardSDNSFilter_Domain.yaml | grep - | sed "s/  - '+.//g" | sed "s/  - '/full:/g" | grep -v "#" | grep -v "acg.rip" | sed "s/'//g" > ./data-lite/antiad
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Domain.yaml | grep - | sed "s/  - '+.//g" | sed "s/  - '/full:/g" | grep -v "#" | grep -v "acg.rip" | sed "s/'//g" > ./data-lite/cn
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/GlobalMedia/GlobalMedia_Domain.yaml | grep - | sed "s/  - '+.//g" | sed "s/  - '/full:/g" | grep -v "#" | grep -v "acg.rip" | sed "s/'//g" > ./data-lite/proxymedia
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Microsoft/Microsoft.yaml | ${{ env.SED }} > ./data-lite/microsoft
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/OpenAI/OpenAI.yaml | ${{ env.SED }} > ./data-lite/openai
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Telegram/Telegram.yaml | ${{ env.SED }} > ./data-lite/telegram

          echo "full:o33249.ingest.sentry.io" >>  ./data-lite/openai
          go run ./ --datapath=./data-lite --outputname geosite-lite.dat

      - name: Build db and metadb file
        env:
          NO_SKIP: true
        run: |
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          geo convert site -i v2ray -o sing -f geosite-lite.db ./community/geosite-lite.dat

      - name: Convert geo-lite to sing-rule-set
        env:
          NO_SKIP: true
        run: |
          mkdir -p ./sing-rule
          cd convert
          go run ./ geosite -f ../community/geosite-lite.dat -o ../sing-rule -t sing-box

      - name: Move and zip files
        run: |
          mkdir -p ./publish/
          install -Dp ./community/geosite-lite.dat ./publish/
          install -Dp ./geosite-lite.db ./publish/
          cd ./publish || exit 1
          sha256sum geosite-lite.dat > geosite-lite.dat.sha256sum
          sha256sum geosite-lite.db > geosite-lite.db.sha256sum

      - name: Delete current release assets
        uses: andreaswilli/delete-release-assets-action@v3.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          deleteOnlyFromDrafts: false

      - name: Create and Upload Release
        id: upload_release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: Release ${{ env.BUILDTIME }}
          tag: latest
          file_glob: true
          overwrite: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "Released on ${{ env.BUILDTIME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Git push assets to "sing-rule" branch
        run: |
            cd sing-rule || exit 1
            ls
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git checkout -b sing
            git add .
            git commit -m "Released on ${{ env.BUILDTIME }}"
            git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -f -u origin sing

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
